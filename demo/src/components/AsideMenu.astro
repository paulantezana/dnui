---
// Organización de componentes en grupos lógicos
const menuSections = [
  {
    title: 'Getting Started',
    icon: 'rocket',
    iconColor: 'text-purple-600 dark:text-purple-400',
    iconBg: 'bg-purple-100 dark:bg-purple-900/50',
    items: [
      { name: 'Starter', href: '/components/starter' },
      { name: 'Theme', href: '/components/theme' },
      { name: 'Icon', href: '/components/icon' }
    ]
  },
  {
    title: 'Navigation',
    icon: 'navigation',
    iconColor: 'text-green-600 dark:text-green-400',
    iconBg: 'bg-green-100 dark:bg-green-900/50',
    items: [
      { name: 'Navigation', href: '/components/navigation' },
      { name: 'Menu', href: '/components/menu' },
      { name: 'Pagination', href: '/components/pagination' }
    ]
  },
  {
    title: 'Inputs',
    icon: 'input',
    iconColor: 'text-yellow-600 dark:text-yellow-400',
    iconBg: 'bg-yellow-100 dark:bg-yellow-900/50',
    items: [
      { name: 'Button', href: '/components/button' },
      { name: 'Form', href: '/components/form' },
      { name: 'Input', href: '/components/input' },
      { name: 'Switch', href: '/components/switch' }
    ]
  },
  {
    title: 'Data Display',
    icon: 'display',
    iconColor: 'text-pink-600 dark:text-pink-400',
    iconBg: 'bg-pink-100 dark:bg-pink-900/50',
    items: [
      { name: 'Avatar', href: '/components/avatar' },
      { name: 'Card', href: '/components/card' },
      { name: 'List', href: '/components/list' },
      { name: 'Table', href: '/components/table' },
      { name: 'Tag', href: '/components/tag' },
      { name: 'Tab', href: '/components/tab' },
      { name: 'Tooltip', href: '/components/tooltip' },
    ]
  },
  {
    title: 'Feedback',
    icon: 'feedback',
    iconColor: 'text-red-600 dark:text-red-400',
    iconBg: 'bg-red-100 dark:bg-red-900/50',
    items: [
      { name: 'Alert', href: '/components/alert' },
      { name: 'Modal', href: '/components/modal' },
      { name: 'Message', href: '/components/message' },
      { name: 'Spin', href: '/components/spin' },
      { name: 'Collapse', href: '/components/collapse' }
    ]
  },
  {
    title: 'Utils',
    icon: 'utils',
    iconColor: 'text-blue-600 dark:text-blue-400',
    iconBg: 'bg-blue-100 dark:bg-blue-900/50',
    items: [
      { name: 'Filter', href: '/components/filter' },
      { name: 'Freeze', href: '/components/freeze' },
      { name: 'Empty', href: '/components/empty' },
      { name: 'Result', href: '/components/result' }
    ]
  }
];

// Función para obtener el ícono según el tipo
function getIcon(iconType: string, className:string) {
  const baseClass = "w-4 h-4";
  const fullClass = `${baseClass} ${className}`.trim();

  const icons = {
    rocket: `<svg class="${fullClass}" fill="currentColor" viewBox="0 0 20 20"><path d="M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z"/></svg>`,
    layout: `<svg class="${fullClass}" fill="currentColor" viewBox="0 0 20 20"><path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/></svg>`,
    navigation: `<svg class="${fullClass}" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/></svg>`,
    input: `<svg class="${fullClass}" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/></svg>`,
    display: `<svg class="${fullClass}" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"/></svg>`,
    feedback: `<svg class="${fullClass}" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/></svg>`,
    utils: `<svg class="${fullClass}" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd"/></svg>`
  };
  return icons[iconType as keyof typeof icons] || icons.layout;
}

// Obtener la página actual para destacar el enlace activo
const currentPath = Astro.url.pathname;
---

<aside
  id="sidebar"
  class="fixed lg:static inset-y-0 left-0 z-50 w-64 bg-white dark:bg-zinc-800 border-r border-zinc-200 dark:border-zinc-800 transform -translate-x-full lg:translate-x-0 transition-transform duration-200 ease-in-out pt-16 lg:pt-0"
  itemscope="itemscope"
  itemtype="http://schema.org/WPSideBar"
  role="complementary"
>
  <nav
    class="h-full overflow-y-auto py-6 px-4"
    itemscope
    itemtype="http://schema.org/WPSideBar"
  >
    {
      menuSections.map((section) => (
        <div class="mb-8">
          <div class="flex items-center gap-2 mb-4">
            <div class={`w-6 h-6 ${section.iconBg} rounded flex items-center justify-center`}>
              <Fragment set:html={getIcon(section.icon, section.iconColor)} />
            </div>
            <h3 class="text-sm font-semibold text-zinc-900 dark:text-zinc-100">
              {section.title}
            </h3>
          </div>
          <ul class="space-y-2 ml-8">
            {section.items.map((item) => (
              <li class="AsideMenu-item" itemprop="url">
                <a
                  href={item.href}
                  itemprop="name"
                  title={`Link to ${item.name}`}
                  class={`block text-sm transition-colors py-1 rounded-md px-2 -mx-2 ${
                    currentPath === item.href
                      ? 'text-blue-600 dark:text-blue-400 font-medium bg-blue-50 dark:bg-blue-900/20'
                      : 'text-zinc-600 dark:text-zinc-400 hover:text-zinc-900 dark:hover:text-zinc-100 hover:bg-zinc-50 dark:hover:bg-zinc-800/50'
                  }`}
                >
                  {item.name}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))
    }

    <!-- Toggle Button (móvil) -->
    <div class="lg:hidden fixed bottom-4 right-4">
      <button
        id="sidebar-close"
        class="p-3 bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900 rounded-full shadow-lg hover:bg-zinc-800 dark:hover:bg-zinc-200 transition-colors"
        aria-label="Close menu"
      >
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </nav>
</aside>

<!-- Mobile Menu Overlay -->
<div
  id="mobile-overlay"
  class="fixed inset-0 z-40 bg-black/50 lg:hidden hidden"
>
</div>
