// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
// ðŸ”¸ Tipos base y configuraciÃ³n
// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

/**
 * Tipos de entrada disponibles para los filtros
 * - 'text': Para campos de texto
 * - 'number': Para campos numÃ©ricos
 * - 'date': Para campos de fecha
 * - 'datetime-local': Para campos de fecha y hora
 * - 'relativeDate': Para filtros de fecha relativa
 */
export type DnInputType = 'text' | 'number' | 'date' | 'datetime-local' | 'relativeDate';

/**
 * Define un campo de filtro con su configuraciÃ³n
 */
export interface FilterField {
  /** Etiqueta o nombre descriptivo del campo que se mostrarÃ¡ en la interfaz */
  caption: string;
  /** Identificador Ãºnico del campo en los datos */
  field: string;
  /** Tipo de entrada que determina el comportamiento del filtro */
  filterType: DnInputType;
}

/**
 * Opciones de configuraciÃ³n para el sistema de filtros
 */
export interface FilterOptions {
  /** ID del elemento HTML donde se renderizarÃ¡ el filtro */
  elementId: string;
  /** Lista de campos disponibles para filtrar */
  fields: FilterField[];
  /** Modelo de filtro inicial (opcional) */
  filterModel?: FilterModel;
}

// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
// ðŸ”¸ Constantes de tipos de filtro
// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

/**
 * Tipos de filtro disponibles para campos de texto
 * Incluye operadores como igual, contiene, empieza con, etc.
 */
export const FILTER_TEXT_FILTER_TYPE = {
  equals: 'Igual a',
  notEqual: 'No igual a',
  contains: 'Contiene',
  notContains: 'No contiene',
  startsWith: 'Empieza con',
  endsWith: 'Termina con',
  blank: 'En blanco',
  notBlank: 'No en blanco',
  in: 'Incluye',
} as const;

/**
 * Tipos de filtro disponibles para campos escalares (nÃºmero, fecha, datetime)
 * Incluye operadores de comparaciÃ³n como mayor que, menor que, entre, etc.
 */
export const FILTER_SCALAR_FILTER_TYPE = {
  equals: 'Igual a',
  notEqual: 'No igual a',
  lessThan: 'Menos que',
  lessThanOrEqual: 'Menos o igual que',
  greaterThan: 'MÃ¡s que',
  greaterThanOrEqual: 'MÃ¡s o igual que',
  inRange: 'Entre',
  blank: 'En blanco',
  notBlank: 'No en blanco',
  in: 'Incluye',
} as const;

/**
 * Tipos de filtro disponibles para fechas relativas
 * Permite filtrar por perÃ­odos relativos como "Ãºltimos 7 dÃ­as"
 */
export const FILTER_RELATIVE_DATE_FILTER_TYPE = {
  relativeDate: 'Relativo',
} as const;

/**
 * Intervalos relativos disponibles para filtros de fecha
 * - 'last': PerÃ­odos pasados (ej: Ãºltimos 7 dÃ­as)
 * - 'this': PerÃ­odo actual (ej: este mes)
 * - 'next': PerÃ­odos futuros (ej: prÃ³ximos 30 dÃ­as)
 */
export const FILTER_RELATIVE_DATE_TYPE = {
  last: 'Ãšltimo(s)',
  this: 'Este',
  next: 'Siguiente(s)',
} as const;

/**
 * PerÃ­odos de tiempo disponibles para filtros relativos (plural)
 * Se usa cuando se especifica una cantidad (ej: 3 meses)
 */
export const FILTER_RELATIVE_DATE_PERIODS = {
  days: 'DÃ­as',
  weeks: 'Semanas',
  months: 'Meses',
  years: 'AÃ±os',
} as const;

/**
 * Tipos de filtro para fechas relativas (constante duplicada, se mantiene por compatibilidad)
 * El tipo de filtro a aplicar debe ser de tipo inRange(entre)
 */
export const FILTER_RELATIVE_DATE_TILTER_TYPE = {
  relativeDate: 'Relativo',
} as const;

/**
 * PerÃ­odos de tiempo disponibles para filtros relativos (singular)
 * Se usa para el perÃ­odo actual (ej: este mes)
 */
export const FILTER_RELATIVE_DATE_PERIOD = {
  day: 'DÃ­a',
  week: 'Semana',
  month: 'Mes',
  year: 'AÃ±o',
} as const;

// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
// ðŸ”¸ Tipos auxiliares
// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

/**
 * Tipo que representa las claves de los filtros de texto
 */
export type TextFilterType = keyof typeof FILTER_TEXT_FILTER_TYPE;

/**
 * Tipo que representa las claves de los filtros escalares
 */
export type ScalarFilterType = keyof typeof FILTER_SCALAR_FILTER_TYPE;

/**
 * Tipo que representa las claves de los filtros de fecha relativa
 */
export type RelativeDateFilterType = keyof typeof FILTER_RELATIVE_DATE_FILTER_TYPE;

/**
 * Tipo que representa los intervalos relativos disponibles
 */
export type RelativeInterval = keyof typeof FILTER_RELATIVE_DATE_TYPE;

/**
 * Tipo que representa los perÃ­odos de tiempo relativos disponibles
 * Combina tanto perÃ­odos en plural como en singular
 */
export type RelativePeriod = keyof typeof FILTER_RELATIVE_DATE_PERIODS | keyof typeof FILTER_RELATIVE_DATE_PERIOD;

// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
// ðŸ”¸ Modelo de filtros (recursivo)
// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

/**
 * Nodo que representa un filtro de columna individual
 * Contiene la configuraciÃ³n especÃ­fica para filtrar un campo de datos
 */
export interface ColumnFilterNode {
  /** Identificador Ãºnico del filtro */
  key: number;
  /** Tipo de entrada del campo (text, number, date, etc.) */
  filterType: DnInputType;
  /** Nombre del campo en los datos a filtrar */
  field: string;
  /** Tipo de operaciÃ³n de filtro (equals, contains, greaterThan, etc.) */
  type:
  | TextFilterType
  | ScalarFilterType
  | RelativeDateFilterType;

  /** Primer valor del filtro (obligatorio para la mayorÃ­a de operaciones) */
  filter1: string | number | null;
  /** Segundo valor del filtro (opcional, usado para rangos como 'inRange') */
  filter2?: string | number | null;

  /** Intervalo relativo para filtros de fecha (last, this, next) */
  relativeInterval?: RelativeInterval;
  /** DuraciÃ³n del perÃ­odo relativo (ej: 7 para "Ãºltimos 7 dÃ­as") */
  relativeDuration?: number | null;
  /** PerÃ­odo de tiempo relativo (days, weeks, months, years) */
  relativePeriod?: RelativePeriod;
}

/**
 * Nodo que representa una uniÃ³n lÃ³gica de filtros
 * Permite agrupar mÃºltiples filtros con operadores AND/OR
 */
export interface JoinFilterNode {
  /** Identificador Ãºnico del grupo de filtros */
  key: number;
  /** Tipo fijo 'join' para identificar nodos de uniÃ³n */
  filterType: 'join';
  /** Operador lÃ³gico para combinar las condiciones (AND u OR) */
  type: 'AND' | 'OR';
  /** Lista de condiciones que pueden ser filtros individuales o grupos anidados */
  conditions: FilterModel[];
}

/**
 * Tipo uniÃ³n que representa cualquier nodo del Ã¡rbol de filtros
 * Puede ser un filtro individual (ColumnFilterNode) o un grupo (JoinFilterNode)
 */
export type FilterModel = ColumnFilterNode | JoinFilterNode;
